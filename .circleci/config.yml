version: 2.1

# Required for dynamic config, also needs to be activated under project settings -> advanced
setup: true

# Directory for workspace to persist data between jobs
default-dir: &default-dir
  working_directory: /tmp/ci-test

# Continuation orb for sending JSON as an API trigger to generated config
# Aws-cli orb used in set-envs script
orbs:
  continuation: circleci/continuation@0.1.2
  aws-cli: circleci/aws-cli@3.1

# Machine arm64 image required to get correct repo version from docker in set-envs script
executors:
  build:
    resource_class: arm.medium
    machine:
      image: ubuntu-2004:current

jobs:
  # Define env var that determine the latest version and s3 object existence
  evaluate:
    <<: *default-dir
    executor: build
    steps:
      - checkout
      - run: mkdir -p workspace
      - run:
          name: docker setup
          command: |
            docker build -t clamav-version-image ./conf/
            docker run -di --name version-check clamav-version-image

      - aws-cli/setup:
          role-arn: $CIRCLECI_ROLE_ARN
          aws-region: $DEFAULT_REGION
      - run:
          # Script contains env var definitions and storing into workspace
          name: Checking latest clamav version, checking if s3 obj exists
          command: |
            source ./scripts/set-envs
      # Creates shared workspace that transfers env vars and JSON to other jobs
      - persist_to_workspace:
          root: workspace
          paths:
            - clamav-latest
            - require-update.json

  # Setup that dynamically loads latest version into generated config, and sends require-update parameter as JSON https://circleci.com/docs/dynamic-config/
  setup:
    <<: *default-dir
    executor: continuation/default
    steps:
      - checkout
      # Attaches the workspace to allow for loading the data into the generated config
      - attach_workspace:
          at: /tmp/ci-test/workspace
      - run: cat workspace/clamav-latest >> "$BASH_ENV"
      - run:
          name: use job config
          command: |
            ./scripts/new-config $CLAMAV_LATEST
      # Effectively an API trigger that gets sent to the generated config
      - continuation/continue:
          configuration_path: ./configs/generated_config.yml
          parameters: /tmp/ci-test/workspace/require-update.json

workflows:
  version: 2
  load-env-setup:
    jobs:
      - evaluate:
          context:
            - aws
      - setup:
          requires:
            - evaluate