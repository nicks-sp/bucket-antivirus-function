version: 2.1

executors:
  build:
    resource_class: arm.medium
    machine:
      image: ubuntu-2004:current
  pre-commit-test:
    docker:
      - image: cimg/python:3.9.13

orbs:
  aws-cli: circleci/aws-cli@3.1

jobs:
  check-update:
    executor: build
    steps:
      - checkout
      - run:
          name: check version update
          command: docker run -t bucket-antivirus-function yum info clamav-update | grep Version | awk -F':' '{ print $2 }' | python3 ./scripts/check-update.py >> "$REQUIRE_UPDATE"
  build:
    executor: build
    environment:
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - checkout
      - aws-cli/setup:
          role-arn: $CIRCLECI_ROLE_ARN
      - run:
          name: "make zip"
          command: make all
      - run:
          name: copy zip file
          command: aws s3 cp ./build/lambda.zip 's3://immortal-soup-59'

  pre-commit-deps:
    executor: pre-commit-test
    steps:
      - checkout
      - run: pip3 install pre-commit
      - run: pre-commit install-hooks

  pre-commit-test:
    executor: pre-commit-test
    steps:
      - checkout
      - run: pip3 install pre-commit
      - run:
          name: Run pre-commit tests
          command: pre-commit run --all-files

workflows:
  version: 2

  check-update:
    jobs:
      - check-update

  make-sync-zip:
    when:
      condition:
        equal: [ true, "$REQUIRE_UPDATE" ]
    jobs:
      - pre-commit-deps
      - pre-commit-test:
          requires:
            - pre-commit-deps
      - build:
          context:
            - aws
          requires:
            - pre-commit-test